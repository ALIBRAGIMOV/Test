{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/roseltorg/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport HideAppBar from \"./components/AppBar\";\n\nfunction App() {\n  const [weather, setWeather] = useState({\n    datas: []\n  });\n  const {\n    datas\n  } = weather;\n  const [moscow, setMoscow] = useState({\n    datasm: []\n  });\n  const {\n    datasm\n  } = moscow;\n  const [london, setLondon] = useState({\n    datasl: []\n  });\n  const {\n    datasl\n  } = london;\n  const [paris, setParis] = useState({\n    datasp: []\n  });\n  const {\n    datasp\n  } = paris;\n  const [sydney, setSydney] = useState({\n    datass: []\n  });\n  const {\n    datass\n  } = sydney;\n  useEffect(() => {\n    getWeatherParis();\n  }, []);\n\n  const getWeather = async city => {\n    const api = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=paris&appid=62029f0d3701271a5e50142b280915f0\n`);\n    const data = await api.json();\n    setWeather({ ...weather,\n      datas: data\n    });\n    console.log(data);\n  };\n  /*\n  const getWeather = async () => {\n    const api = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=Kiev,ua&appid=62029f0d3701271a5e50142b280915f0&units=metric\n  `\n    );\n    const data = await api.json();\n    console.log(data);\n       fetch(\n    `http://api.openweathermap.org/data/2.5/weather?q=moscow&appid=62029f0d3701271a5e50142b280915f0\n  `\n  )\n    .then((res) => res.json())\n    .then((result) => {\n      setWeather({ ...weather, datas: result });\n      console.log(result);\n    });\n  };*/\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HideAppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), JSON.stringify({\n    weather\n  })), weather.datas.name, moscow.datasm.name);\n}\n\nexport default App;\n/* const getWeather = async () => {\n  const api = await fetch(`https://samples.openweathermap.org/data/2.5/forecast/daily?id=524901&appid=b1b15e88fa797225412429c1c50c122a1`);\n  const data = await api.json();\n  console.log(data);\n}\n*/","map":{"version":3,"sources":["/Users/ali/Documents/roseltorg/src/App.js"],"names":["React","useState","useEffect","HideAppBar","App","weather","setWeather","datas","moscow","setMoscow","datasm","london","setLondon","datasl","paris","setParis","datasp","sydney","setSydney","datass","getWeatherParis","getWeather","city","api","fetch","data","json","console","log","JSON","stringify","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC;AACrCM,IAAAA,KAAK,EAAE;AAD8B,GAAD,CAAtC;AAGA,QAAM;AAAEA,IAAAA;AAAF,MAAYF,OAAlB;AAEA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC;AACnCS,IAAAA,MAAM,EAAE;AAD2B,GAAD,CAApC;AAIE,QAAM;AAAEA,IAAAA;AAAF,MAAaF,MAAnB;AAEF,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC;AACnCY,IAAAA,MAAM,EAAE;AAD2B,GAAD,CAApC;AAIE,QAAM;AAAEA,IAAAA;AAAF,MAAaF,MAAnB;AAEF,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC;AACjCe,IAAAA,MAAM,EAAE;AADyB,GAAD,CAAlC;AAIE,QAAM;AAAEA,IAAAA;AAAF,MAAaF,KAAnB;AAEE,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC;AACnCkB,IAAAA,MAAM,EAAE;AAD2B,GAAD,CAApC;AAII,QAAM;AAAEA,IAAAA;AAAF,MAAaF,MAAnB;AAKRf,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACjC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB;CADoB,CAAvB;AAIA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACApB,IAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcE,MAAAA,KAAK,EAAEkB;AAArB,KAAD,CAAV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,GARD;AASA;;;;;;;;;;;;;;;;;;;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGI,IAAI,CAACC,SAAL,CAAe;AAAEzB,IAAAA;AAAF,GAAf,CAFH,CADF,EAKGA,OAAO,CAACE,KAAR,CAAcwB,IALjB,EAMGvB,MAAM,CAACE,MAAP,CAAcqB,IANjB,CADF;AAUD;;AAED,eAAe3B,GAAf;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport HideAppBar from \"./components/AppBar\";\n\nfunction App() {\n  const [weather, setWeather] = useState({\n    datas: [],\n  });\n  const { datas } = weather;\n\n  const [moscow, setMoscow] = useState({\n    datasm: [],\n  });\n\n    const { datasm } = moscow;\n\n  const [london, setLondon] = useState({\n    datasl: [],\n  });\n\n    const { datasl } = london;\n\n  const [paris, setParis] = useState({\n    datasp: [],\n  });\n\n    const { datasp } = paris;\n    \n      const [sydney, setSydney] = useState({\n        datass: [],\n      });\n\n          const { datass } = sydney;\n\n\n\n\n  useEffect(() => {\n    getWeatherParis();\n  }, []);\n  const getWeather = async (city) => {\n    const api = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=paris&appid=62029f0d3701271a5e50142b280915f0\n`\n    );\n    const data = await api.json();\n    setWeather({ ...weather, datas: data });\n    console.log(data);\n  };\n  /*\n  const getWeather = async () => {\n    const api = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=Kiev,ua&appid=62029f0d3701271a5e50142b280915f0&units=metric\n`\n    );\n    const data = await api.json();\n    console.log(data);\n\n      fetch(\n    `http://api.openweathermap.org/data/2.5/weather?q=moscow&appid=62029f0d3701271a5e50142b280915f0\n`\n  )\n    .then((res) => res.json())\n    .then((result) => {\n      setWeather({ ...weather, datas: result });\n      console.log(result);\n    });\n  };*/\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <HideAppBar />\n        {JSON.stringify({ weather })}\n      </header>\n      {weather.datas.name}\n      {moscow.datasm.name}\n    </div>\n  );\n}\n\nexport default App;\n\n/* const getWeather = async () => {\n  const api = await fetch(`https://samples.openweathermap.org/data/2.5/forecast/daily?id=524901&appid=b1b15e88fa797225412429c1c50c122a1`);\n  const data = await api.json();\n  console.log(data);\n}\n*/\n"]},"metadata":{},"sourceType":"module"}