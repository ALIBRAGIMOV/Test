{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/roseltorg/src/components/CityCard.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n    maxWidth: 290,\n    cursor: \"pointer\",\n    marginTop: 20,\n    borderRadius: 12,\n    boxShadow: \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #48484A\",\n    borderRadius: 4,\n    maxWidth: 1000,\n    boxShadow: theme.shadows[5],\n    outline: \"none\"\n  },\n  modalCard: {\n    width: 350,\n    boxShadow: \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\"\n  }\n}));\nexport default function CityCard({\n  cityWeather,\n  cityForeWeather,\n  temp,\n  sky,\n  icon,\n  time\n}) {\n  const classes = useStyles();\n  const bull = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bullet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }\n  }, \"\\u2022\");\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const cels = Math.round(temp - 273.16);\n\n  const timeCity = times => {\n    var a = new Date(times * 1000);\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    let year = a.getFullYear();\n    let month = months[a.getMonth()];\n    let date = a.getDate();\n    let hour = a.getHours();\n    let min = a.getMinutes();\n    let sec = a.getSeconds();\n    let time = date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n    return time;\n  };\n\n  const list = [cityForeWeather];\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Current weather in\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, cityWeather.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://openweathermap.org/img/w/${icon}.png`,\n    alt: \"icon\",\n    width: \"60\",\n    height: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Temperature: \", cels, \"\\u2103\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Description: \", sky), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, cityForeWeather), cityForeWeather)), /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.modalCard,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"More weather information\", \" \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, cityWeather.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://openweathermap.org/img/w/${icon}.png`,\n    alt: \"icon\",\n    width: \"60\",\n    height: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"Temperature: \", cels, \"\\u2103\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, \"MaxTemperature: \", cels, \"\\u2103\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, \"MinTemperature: \", cels, \"\\u2103\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Description: \", sky), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \" \", timeCity(time))))))));\n}","map":{"version":3,"sources":["/Users/ali/Documents/roseltorg/src/components/CityCard.jsx"],"names":["React","makeStyles","Card","CardActions","CardContent","Button","Typography","Modal","Backdrop","Fade","useStyles","theme","root","minWidth","maxWidth","cursor","marginTop","borderRadius","boxShadow","bullet","display","margin","transform","title","fontSize","pos","marginBottom","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","border","shadows","outline","modalCard","width","CityCard","cityWeather","cityForeWeather","temp","sky","icon","time","classes","bull","open","setOpen","useState","handleOpen","handleClose","cels","Math","round","timeCity","times","a","Date","months","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","list","name","timeout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    maxWidth: 290,\n    cursor: \"pointer\",\n    marginTop: 20,\n    borderRadius: 12,\n    boxShadow: \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #48484A\",\n    borderRadius: 4,\n    maxWidth: 1000,\n    boxShadow: theme.shadows[5],\n    outline: \"none\",\n  },\n  modalCard: {\n    width: 350,\n    boxShadow: \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\",\n  },\n}));\n\nexport default function CityCard({\n  cityWeather,\n  cityForeWeather,\n  temp,\n  sky,\n  icon,\n  time,\n}) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const cels = Math.round(temp - 273.16);\n\n  const timeCity = (times) => {\n    var a = new Date(times * 1000);\n    var months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    let year = a.getFullYear();\n    let month = months[a.getMonth()];\n    let date = a.getDate();\n    let hour = a.getHours();\n    let min = a.getMinutes();\n    let sec = a.getSeconds();\n    let time =\n      date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n    return time;\n  };\n  const list = [cityForeWeather];\n\n  return (\n    <React.Fragment>\n      <Card className={classes.root} onClick={handleOpen}>\n        <CardContent>\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            Current weather in\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {cityWeather.name}\n          </Typography>\n          <img\n            src={`http://openweathermap.org/img/w/${icon}.png`}\n            alt=\"icon\"\n            width=\"60\"\n            height=\"50\"\n          />\n          <Typography>Temperature: {cels}℃</Typography>\n          <Typography>Description: {sky}</Typography>\n          <Typography>{cityForeWeather}</Typography>\n          {cityForeWeather\n        }\n          \n        </CardContent>\n      </Card>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Card className={classes.modalCard} onClick={handleOpen}>\n              <CardContent>\n                <Typography\n                  className={classes.title}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  More weather information{\" \"}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {cityWeather.name}\n                </Typography>\n                <img\n                  src={`http://openweathermap.org/img/w/${icon}.png`}\n                  alt=\"icon\"\n                  width=\"60\"\n                  height=\"50\"\n                />\n                <Typography>Temperature: {cels}℃</Typography>\n                <Typography>MaxTemperature: {cels}℃</Typography>\n                <Typography>MinTemperature: {cels}℃</Typography>\n                <Typography>Description: {sky}</Typography>\n                <Typography> {timeCity(time)}</Typography>\n              </CardContent>\n            </Card>\n          </div>\n        </Fade>\n      </Modal>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}