{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/ggg/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport HideAppBar from \"./components/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n    maxWidth: 290,\n    cursor: \"pointer\",\n    marginTop: 20,\n    borderRadius: 12,\n    boxShadow: \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 12,\n    maxWidth: 1000,\n    boxShadow: theme.shadows[5],\n    outline: \"none\"\n  },\n  modalCard: {\n    width: 400,\n    boxShadow: \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\"\n  }\n}));\n\nfunction App() {\n  const [moscow, setMoscow] = useState({\n    datasm: [],\n    datafm: [],\n    tempm: [],\n    skym: [],\n    iconm: \"\",\n    timem: \"\"\n  });\n  const {\n    datasm,\n    tempm,\n    skym,\n    iconm,\n    timem\n  } = moscow;\n\n  const getWeatherMoscow = async () => {\n    const api = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=moscow&appid=62029f0d3701271a5e50142b280915f0\n`);\n    const forecastapi = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=moscow&units=metric&appid=62029f0d3701271a5e50142b280915f0`);\n    const datafore = await forecastapi.json();\n    const data = await api.json();\n    setMoscow({ ...moscow,\n      datasm: data,\n      datafm: datafore.list,\n      tempm: data.main.temp,\n      skym: data.weather[0].description,\n      iconm: data.weather[0].icon\n    });\n  };\n\n  const [london, setLondon] = useState({\n    datasl: [],\n    datafl: [],\n    templ: [],\n    skyl: [],\n    icon: \"\",\n    timel: \"\"\n  });\n  const {\n    datasl,\n    datafl,\n    templ,\n    skyl,\n    iconl,\n    timel\n  } = london;\n\n  const getWeatherLondon = async () => {\n    const api = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=london&appid=62029f0d3701271a5e50142b280915f0\n`);\n    const forecastapi = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=london&units=metric&appid=62029f0d3701271a5e50142b280915f0`);\n    const data = await api.json();\n    const datafore = await forecastapi.json();\n    setLondon({ ...london,\n      datasl: data,\n      datafl: datafore.list,\n      templ: data.main.temp,\n      skyl: data.weather[0].description,\n      iconl: data.weather[0].icon\n    });\n  };\n\n  const [paris, setParis] = useState({\n    datasp: [],\n    datafp: [],\n    temp: [],\n    sky: [],\n    icon: \"\",\n    time: \"\"\n  });\n  const {\n    datasp,\n    datafp,\n    temp,\n    sky,\n    icon,\n    time\n  } = paris;\n  useEffect(() => {\n    getWeatherParis();\n    getWeatherMoscow();\n    getWeatherLondon();\n  }, []);\n\n  const getWeatherParis = async () => {\n    const api = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=paris&appid=62029f0d3701271a5e50142b280915f0\n`);\n    const forecastapi = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=paris&units=metric&appid=62029f0d3701271a5e50142b280915f0`);\n    const data = await api.json();\n    const datafore = await forecastapi.json();\n    setParis({ ...paris,\n      datasp: data,\n      datafp: datafore.list,\n      temp: data.main.temp,\n      sky: data.weather[0].description,\n      icon: data.weather[0].icon,\n      time: data.dt\n    });\n  };\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openTwo, setOpenTwo] = React.useState(false);\n  const [openThr, setOpenThr] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpenTwo = () => {\n    setOpenTwo(true);\n  };\n\n  const handleCloseTwo = () => {\n    setOpenTwo(false);\n  };\n\n  const handleOpenThr = () => {\n    setOpenThr(true);\n  };\n\n  const handlCloseThr = () => {\n    setOpenThr(false);\n  };\n\n  const cels = Math.round(temp - 273.16);\n  const celsl = Math.round(templ - 273.16);\n  const celsm = Math.round(tempm - 273.16);\n\n  const timeCity = times => {\n    let a = new Date(times * 1000);\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    let year = a.getFullYear();\n    let month = months[a.getMonth()];\n    let date = a.getDate();\n    let hour = a.getHours();\n    let min = a.getMinutes();\n    let sec = a.getSeconds();\n    let time = \"ðŸ—“\" + date + \" \" + month + \" \" + year + \"ðŸ•“\" + \" \" + hour + \":\" + min + \"0\";\n    return time;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HideAppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, \"Current weather in\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, paris.datasp.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://openweathermap.org/img/w/${icon}.png`,\n    alt: \"icon\",\n    width: \"60\",\n    height: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, \"Temperature: \", cels, \"\\u2103\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, \"Description: \", sky))), /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.modalCard,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 23\n    }\n  }, \"More weather information\", \" \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 23\n    }\n  }, paris.datasp.name), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }\n  }, paris.datafp.slice(0, 4).map(item => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 20,\n      marginLeft: 15,\n      borderRadius: 12,\n      width: 150,\n      boxShadow: \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 33\n    }\n  }, timeCity(item.dt)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 33\n    }\n  }, \"Temp: \", item.main.temp, \"\\u2103\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://openweathermap.org/img/w/${item.weather[0].icon}.png`,\n    alt: \"icon\",\n    width: \"60\",\n    height: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  }, \"Weather description :\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 33\n    }\n  }, item.weather[0].description)))))))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    onClick: handleOpenTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, \"Current weather in\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  }, london.datasl.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://openweathermap.org/img/w/${icon}.png`,\n    alt: \"icon\",\n    width: \"60\",\n    height: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }, \"Temperature: \", celsl, \"\\u2103\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }, \"Description: \", skyl))), /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: openTwo,\n    onClose: handleCloseTwo,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: openTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.modalCard,\n    onClick: handleOpenTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 23\n    }\n  }, \"More weather information\", \" \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 23\n    }\n  }, london.datasl.name), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 25\n    }\n  }, london.datafl.slice(0, 4).map(item => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 20,\n      marginLeft: 15,\n      borderRadius: 12,\n      width: 150,\n      boxShadow: \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 33\n    }\n  }, timeCity(item.dt), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 55\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 33\n    }\n  }, \"Temp: \", item.main.temp, \"\\u2103\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://openweathermap.org/img/w/${item.weather[0].icon}.png`,\n    alt: \"icon\",\n    width: \"60\",\n    height: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 33\n    }\n  }, \"Weather description :\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 33\n    }\n  }, item.weather[0].description)))))))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    onClick: handleOpenThr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 17\n    }\n  }, \"Current weather in\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 17\n    }\n  }, moscow.datasm.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://openweathermap.org/img/w/${icon}.png`,\n    alt: \"icon\",\n    width: \"60\",\n    height: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 17\n    }\n  }, \"Temperature: \", celsm, \"\\u2103\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 17\n    }\n  }, \"Description: \", skym))), /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: openThr,\n    onClose: handlCloseThr,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: openThr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.modalCard,\n    onClick: handleOpenThr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 23\n    }\n  }, \"More weather information\", \" \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 23\n    }\n  }, moscow.datasm.name), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 25\n    }\n  }, moscow.datafm.slice(0, 4).map(item => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 20,\n      marginLeft: 15,\n      borderRadius: 12,\n      width: 150,\n      boxShadow: \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 33\n    }\n  }, timeCity(item.dt), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 55\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 33\n    }\n  }, \"Temp: \", item.main.temp, \"\\u2103\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://openweathermap.org/img/w/${item.weather[0].icon}.png`,\n    alt: \"icon\",\n    width: \"60\",\n    height: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 33\n    }\n  }, \"Weather description :\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 33\n    }\n  }, item.weather[0].description)))))))))))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ali/Documents/ggg/src/App.js"],"names":["React","useState","useEffect","HideAppBar","Grid","makeStyles","Card","CardContent","Typography","Modal","Backdrop","Fade","useStyles","theme","root","minWidth","maxWidth","cursor","marginTop","borderRadius","boxShadow","bullet","display","margin","transform","title","fontSize","pos","marginBottom","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","shadows","outline","modalCard","width","App","moscow","setMoscow","datasm","datafm","tempm","skym","iconm","timem","getWeatherMoscow","api","fetch","forecastapi","datafore","json","data","list","main","temp","weather","description","icon","london","setLondon","datasl","datafl","templ","skyl","timel","iconl","getWeatherLondon","paris","setParis","datasp","datafp","sky","time","getWeatherParis","dt","classes","open","setOpen","openTwo","setOpenTwo","openThr","setOpenThr","handleOpen","handleClose","handleOpenTwo","handleCloseTwo","handleOpenThr","handlCloseThr","cels","Math","round","celsl","celsm","timeCity","times","a","Date","months","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","name","timeout","slice","map","item","marginLeft","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport HideAppBar from \"./components/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    maxWidth: 290,\n    cursor: \"pointer\",\n    marginTop: 20,\n    borderRadius: 12,\n    boxShadow: \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 12,\n    maxWidth: 1000,\n    boxShadow: theme.shadows[5],\n    outline: \"none\",\n  },\n  modalCard: {\n    width: 400,\n    boxShadow: \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\",\n  },\n}));\n\nfunction App() {\n  const [moscow, setMoscow] = useState({\n    datasm: [],\n    datafm: [],\n    tempm: [],\n    skym: [],\n    iconm: \"\",\n    timem: \"\",\n  });\n\n  const { datasm, tempm, skym, iconm, timem } = moscow;\n\n  const getWeatherMoscow = async () => {\n    const api = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=moscow&appid=62029f0d3701271a5e50142b280915f0\n`\n    );\n    const forecastapi = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=moscow&units=metric&appid=62029f0d3701271a5e50142b280915f0`\n    );\n\n    const datafore = await forecastapi.json();\n    const data = await api.json();\n    setMoscow({\n      ...moscow,\n      datasm: data,\n      datafm: datafore.list,\n      tempm: data.main.temp,\n      skym: data.weather[0].description,\n      iconm: data.weather[0].icon,\n    });\n  };\n\n  const [london, setLondon] = useState({\n    datasl: [],\n    datafl: [],\n    templ: [],\n    skyl: [],\n    icon: \"\",\n    timel: \"\",\n  });\n\n  const { datasl, datafl, templ, skyl, iconl, timel } = london;\n\n  const getWeatherLondon = async () => {\n    const api = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=london&appid=62029f0d3701271a5e50142b280915f0\n`\n    );\n    const forecastapi = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=london&units=metric&appid=62029f0d3701271a5e50142b280915f0`\n    );\n    const data = await api.json();\n    const datafore = await forecastapi.json();\n\n    setLondon({\n      ...london,\n      datasl: data,\n      datafl: datafore.list,\n      templ: data.main.temp,\n      skyl: data.weather[0].description,\n      iconl: data.weather[0].icon,\n    });\n  };\n\n  const [paris, setParis] = useState({\n    datasp: [],\n    datafp: [],\n    temp: [],\n    sky: [],\n    icon: \"\",\n    time: \"\",\n  });\n\n  const { datasp, datafp, temp, sky, icon, time } = paris;\n\n  useEffect(() => {\n    getWeatherParis();\n    getWeatherMoscow();\n    getWeatherLondon();\n  }, []);\n\n  const getWeatherParis = async () => {\n    const api = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=paris&appid=62029f0d3701271a5e50142b280915f0\n`\n    );\n    const forecastapi = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=paris&units=metric&appid=62029f0d3701271a5e50142b280915f0`\n    );\n\n    const data = await api.json();\n    const datafore = await forecastapi.json();\n    setParis({\n      ...paris,\n      datasp: data,\n      datafp: datafore.list,\n      temp: data.main.temp,\n      sky: data.weather[0].description,\n      icon: data.weather[0].icon,\n      time: data.dt,\n    });\n  };\n\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [openTwo, setOpenTwo] = React.useState(false);\n  const [openThr, setOpenThr] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpenTwo = () => {\n    setOpenTwo(true);\n  };\n\n  const handleCloseTwo = () => {\n    setOpenTwo(false);\n  };\n\n  const handleOpenThr = () => {\n    setOpenThr(true);\n  };\n\n  const handlCloseThr = () => {\n    setOpenThr(false);\n  };\n\n  const cels = Math.round(temp - 273.16);\n  const celsl = Math.round(templ - 273.16);\n  const celsm = Math.round(tempm - 273.16);\n\n  const timeCity = (times) => {\n    let a = new Date(times * 1000);\n    let months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    let year = a.getFullYear();\n    let month = months[a.getMonth()];\n    let date = a.getDate();\n    let hour = a.getHours();\n    let min = a.getMinutes();\n    let sec = a.getSeconds();\n    let time =\n      \"ðŸ—“\" +\n      date +\n      \" \" +\n      month +\n      \" \" +\n      year +\n      \"ðŸ•“\" +\n      \" \" +\n      hour +\n      \":\" +\n      min +\n      \"0\";\n    return time;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <HideAppBar />\n      </header>\n\n      <div className=\"Layout\">\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={7}\n        >\n          <Grid item>\n            <Card className={classes.root} onClick={handleOpen}>\n              <CardContent>\n                <Typography\n                  className={classes.title}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Current weather in\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {paris.datasp.name}\n                </Typography>\n\n                <img\n                  src={`https://openweathermap.org/img/w/${icon}.png`}\n                  alt=\"icon\"\n                  width=\"60\"\n                  height=\"50\"\n                />\n                <Typography>Temperature: {cels}â„ƒ</Typography>\n                <Typography>Description: {sky}</Typography>\n              </CardContent>\n            </Card>\n            <Modal\n              aria-labelledby=\"transition-modal-title\"\n              aria-describedby=\"transition-modal-description\"\n              className={classes.modal}\n              open={open}\n              onClose={handleClose}\n              closeAfterTransition\n              BackdropComponent={Backdrop}\n              BackdropProps={{\n                timeout: 500,\n              }}\n            >\n              <Fade in={open}>\n                <div className={classes.paper}>\n                  <Card className={classes.modalCard} onClick={handleOpen}>\n                    <CardContent>\n                      <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                      >\n                        More weather information{\" \"}\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"h2\">\n                        {paris.datasp.name}\n                      </Typography>\n                      <Typography>\n                        <Grid container direction=\"row\" spacing={2}>\n                          {paris.datafp.slice(0, 4).map((item) => (\n                            <Grid item>\n                              <div\n                                style={{\n                                  marginTop: 20,\n                                  marginLeft: 15,\n                                  borderRadius: 12,\n                                  width: 150,\n                                  boxShadow:\n                                    \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\",\n                                  textAlign: \"center\",\n                                }}\n                              >\n                                <br />\n                                <Typography variant=\"h6\" gutterBottom>\n                                  {timeCity(item.dt)}\n                                </Typography>\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                  Temp: {item.main.temp}â„ƒ\n                                </Typography>\n                                <img\n                                  src={`http://openweathermap.org/img/w/${item.weather[0].icon}.png`}\n                                  alt=\"icon\"\n                                  width=\"60\"\n                                  height=\"50\"\n                                />\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                  Weather description :\n                                </Typography>\n                                <Typography variant=\"body2\" gutterBottom>\n                                  {item.weather[0].description}\n                                </Typography>\n                              </div>\n                            </Grid>\n                          ))}\n                        </Grid>\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </div>\n              </Fade>\n            </Modal>\n          </Grid>\n          <Grid item>\n            <Card className={classes.root} onClick={handleOpenTwo}>\n              <CardContent>\n                <Typography\n                  className={classes.title}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Current weather in\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {london.datasl.name}\n                </Typography>\n\n                <img\n                  src={`http://openweathermap.org/img/w/${icon}.png`}\n                  alt=\"icon\"\n                  width=\"60\"\n                  height=\"50\"\n                />\n                <Typography>Temperature: {celsl}â„ƒ</Typography>\n                <Typography>Description: {skyl}</Typography>\n              </CardContent>\n            </Card>\n            <Modal\n              aria-labelledby=\"transition-modal-title\"\n              aria-describedby=\"transition-modal-description\"\n              className={classes.modal}\n              open={openTwo}\n              onClose={handleCloseTwo}\n              closeAfterTransition\n              BackdropComponent={Backdrop}\n              BackdropProps={{\n                timeout: 500,\n              }}\n            >\n              <Fade in={openTwo}>\n                <div className={classes.paper}>\n                  <Card className={classes.modalCard} onClick={handleOpenTwo}>\n                    <CardContent>\n                      <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                      >\n                        More weather information{\" \"}\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"h2\">\n                        {london.datasl.name}\n                      </Typography>\n                      <Typography>\n                        <Grid container direction=\"row\" spacing={2}>\n                          {london.datafl.slice(0, 4).map((item) => (\n                            <Grid item>\n                              <div\n                                style={{\n                                  marginTop: 20,\n                                  marginLeft: 15,\n                                  borderRadius: 12,\n                                  width: 150,\n                                  boxShadow:\n                                    \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\",\n                                  textAlign: \"center\",\n                                }}\n                              >\n                                <Typography variant=\"h6\" gutterBottom>\n                                  {timeCity(item.dt)} <br />\n                                </Typography>\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                  Temp: {item.main.temp}â„ƒ\n                                </Typography>\n                                <img\n                                  src={`http://openweathermap.org/img/w/${item.weather[0].icon}.png`}\n                                  alt=\"icon\"\n                                  width=\"60\"\n                                  height=\"50\"\n                                />\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                  Weather description :\n                                </Typography>\n                                <Typography variant=\"body2\" gutterBottom>\n                                  {item.weather[0].description}\n                                </Typography>\n                              </div>\n                            </Grid>\n                          ))}\n                        </Grid>\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </div>\n              </Fade>\n            </Modal>\n          </Grid>\n          <Grid item>\n            <Card className={classes.root} onClick={handleOpenThr}>\n              <CardContent>\n                <Typography\n                  className={classes.title}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Current weather in\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {moscow.datasm.name}\n                </Typography>\n\n                <img\n                  src={`http://openweathermap.org/img/w/${icon}.png`}\n                  alt=\"icon\"\n                  width=\"60\"\n                  height=\"50\"\n                />\n                <Typography>Temperature: {celsm}â„ƒ</Typography>\n                <Typography>Description: {skym}</Typography>\n              </CardContent>\n            </Card>\n            <Modal\n              aria-labelledby=\"transition-modal-title\"\n              aria-describedby=\"transition-modal-description\"\n              className={classes.modal}\n              open={openThr}\n              onClose={handlCloseThr}\n              closeAfterTransition\n              BackdropComponent={Backdrop}\n              BackdropProps={{\n                timeout: 500,\n              }}\n            >\n              <Fade in={openThr}>\n                <div className={classes.paper}>\n                  <Card className={classes.modalCard} onClick={handleOpenThr}>\n                    <CardContent>\n                      <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                      >\n                        More weather information{\" \"}\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"h2\">\n                        {moscow.datasm.name}\n                      </Typography>\n                      <Typography>\n                        <Grid container direction=\"row\" spacing={2}>\n                          {moscow.datafm.slice(0, 4).map((item) => (\n                            <Grid item>\n                              <div\n                                style={{\n                                  marginTop: 20,\n                                  marginLeft: 15,\n                                  borderRadius: 12,\n                                  width: 150,\n                                  boxShadow:\n                                    \"0 10px 45px rgba(0,0,0,.08), 0 5px 10px rgba(0,0,0,.05)\",\n                                  textAlign: \"center\",\n                                }}\n                              >\n                                <Typography variant=\"h6\" gutterBottom>\n                                  {timeCity(item.dt)} <br />\n                                </Typography>\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                  Temp: {item.main.temp}â„ƒ\n                                </Typography>\n                                <img\n                                  src={`http://openweathermap.org/img/w/${item.weather[0].icon}.png`}\n                                  alt=\"icon\"\n                                  width=\"60\"\n                                  height=\"50\"\n                                />\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                  Weather description :\n                                </Typography>\n                                <Typography variant=\"body2\" gutterBottom>\n                                  {item.weather[0].description}\n                                </Typography>\n                              </div>\n                            </Grid>\n                          ))}\n                        </Grid>\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </div>\n              </Fade>\n            </Modal>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}